name: github-actions-release
run-name: Pull request release branch.
permissions: write-all
on:
    pull_request:
        branches:
            - 'release/*'
            - 'main'

jobs:
  check-ts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18, 20 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}


      - name: Cache node modules
        uses: actions/cache@v4.0.2
        with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
                    ${{ runner.os }}-node-
                    ${{ runner.os }}-  

      - name: check:ts
        run: npm run check:ts
  unit-test:
    needs: [check-ts]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18, 20 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v4.0.2
        with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
                    ${{ runner.os }}-node-
                    ${{ runner.os }}-  

      - name: Run Vitest
        run: npm run test

  deploy-chromatic:
    needs: [check-ts]
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
          with:
              fetch-depth: 0
        - name: Use Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '20'
        - name: Cache node modules
          uses: actions/cache@v4.0.2
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
                    ${{ runner.os }}-node-
                    ${{ runner.os }}-  

        - uses: chromaui/action@v1
          with:
              projectToken: ${{ secrets.CHROMATIC_TOKEN }}
              token: ${{ secrets.GITHUB_TOKEN }}
              
  cypress-run:
    needs: [deploy-chromatic,unit-test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm run dev
          wait-on: 'http://localhost:3000'
          record: true
          parallel: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_URL_SHADOW: ${{ secrets.MYSQL_URL_SHADOW }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET}}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID}}

              
