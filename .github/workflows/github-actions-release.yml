name: github-actions-release
run-name: Pull request release branch.
permissions:
    contents: read
    pages: write
    id-token: write
    # Write permissions for pull-requests are required for using the `comment-summary-in-pr` option, comment out if you aren't using this option
    pull-requests: write
on:
    pull_request:
        branches:
            - 'release/*'
            - 'main'

jobs:
  check-ts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18, 20 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: check:ts
        run: npm run check:ts
  unit-test:
    needs: [check-ts]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18, 20 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run Vitest
        run: npm run test

  deploy-chromatic:
    needs: [check-ts]
    # Operating System
    runs-on: ubuntu-latest
  # Job steps
    steps:
        - uses: actions/checkout@v4
          with:
              fetch-depth: 0
        - name: Use Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '20'

        - name: Install dependencies
          run: npm install
        #ðŸ‘‡ Adds Chromatic as a step in the workflow
        - uses: chromaui/action@v1
          # Options required for Chromatic's GitHub Action
          with:
              #ðŸ‘‡ Chromatic projectToken,
              projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
              token: ${{ secrets.GITHUB_TOKEN }}
              
  cypress-run:
    needs: [deploy-chromatic,unit-test]
    runs-on: ubuntu-latest
    # Runs tests in parallel with matrix strategy https://docs.cypress.io/guides/guides/parallelization
    # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
    # Also see warning here https://github.com/cypress-io/github-action#parallel
    strategy:
      fail-fast: false # https://github.com/cypress-io/github-action/issues/48
      matrix:
        containers: [1, 2] # Uses 2 parallel instances
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Cypress run
        # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v6
        with:
          start: npm run dev
          wait-on: 'http://localhost:3000' # Waits
          # Starts web server for E2E tests - replace with your own server invocation
          # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-serve
         # Waits for above
          # Records to Cypress Cloud
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          record: true
          parallel: true # Runs test in parallel using settings above
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo â†’ Settings â†’ Secrets â†’ Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MYSQL_URL: ${{ secrets.MYSQL_URL }}
          MYSQL_URL_SHADOW: ${{ secrets.MYSQL_URL_SHADOW }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          GOOGLE_SECRET: ${{ secrets.GOOGLE_SECRET}}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID

              
